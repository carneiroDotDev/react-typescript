{"version":3,"sources":["Store.tsx","App.tsx","Actions.ts","HomePage.tsx","FavPage.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","React","createContext","reducer","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","memo","props","useContext","console","log","react_default","a","createElement","Fragment","className","es","to","length","children","fetchDataAction","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","data","dataJSON","wrap","_context","prev","next","fetch","sent","json","abrupt","_embedded","stop","_x","apply","this","arguments","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodesList","lazy","__webpack_require__","e","then","bind","RouterPage","pageComponent","ReactDOM","render","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","Provider","value","src_App","path","_React$useContext","useEffect","store","Suspense","fallback","FavPage_EpisodesList","document","getElementById"],"mappings":"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","file":"static/js/main.8376d0a5.chunk.js","sourcesContent":["import React from \"react\";\nimport { IState, IAction } from './interfaces'\n\nconst initialState: IState = {\n  episodes: [],\n  favourites: []\n};\n\nexport const Store = React.createContext<IState | any>(initialState);\n\nfunction reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return { ...state, episodes: action.payload };\n    case \"ADD_FAV\":\n      return { ...state, favourites: [...state.favourites, action.payload] }\n    case \"REMOVE_FAV\":\n      return { ...state, favourites: action.payload }\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider({children}: JSX.ElementChildrenAttribute): JSX.Element {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>;\n}\n","import React from 'react'\nimport { Store } from './Store'\nimport './index.css'\nimport { Link } from '@reach/router'\n\nconst App = (props: any): JSX.Element => {\n    const { state } = React.useContext(Store)\n\n    console.log('state -', state)\n    //https://api.imfootball.io/search/suggestions/editorial?langId=de\n\n    return (\n        <>\n            <header className=\"header\">\n                <div>\n                    <h2>Rick and Morty Episode picker..</h2>\n                    <p> Pick your favourite episode!</p>\n                </div>\n                <div>\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/faves\">{`Number of favourites: ${state.favourites.length}`}</Link>\n                </div>\n            </header>\n            {props.children}\n        </>\n    )\n}\n\nexport default React.memo(App)\n","import { IAction, IEpisode, IState } from './interfaces'\n\n    export const fetchDataAction = async (dispatch:any) => {\n        const data = await fetch(\n            'https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes'\n        )\n        const dataJSON = await data.json()\n        return dispatch({\n            type: 'FETCH_DATA',\n            payload: dataJSON._embedded.episodes,\n        })\n    }\n\n    export const toggleFavAction = (state: IState, dispatch: any, episode: IEpisode): IAction => {\n        const episodeInFav: boolean = state.favourites.includes(episode)\n        console.log(episodeInFav)\n\n        let dispatchObj = {\n            type: 'ADD_FAV',\n            payload: episode,\n        }\n\n        if (episodeInFav) {\n            const favWithoutEpisode: any = state.favourites.filter(\n                (fav: IEpisode) => fav.id !== episode.id\n            )\n\n            dispatchObj = {\n                type: 'REMOVE_FAV',\n                payload: favWithoutEpisode,\n            }\n        }\n\n        return dispatch(dispatchObj)\n    }\n","import React from 'react'\nimport { Store } from './Store'\nimport './index.css'\nimport { fetchDataAction, toggleFavAction } from './Actions'\nimport { IEpisodeProps } from './interfaces';\n\nconst EpisodesList = React.lazy<any>(() => import('./EpisodesList'))\n\nexport default function HomePage() {\n    const { state, dispatch } = React.useContext(Store)\n\n    React.useEffect(() => {\n        state.episodes.length === 0 && fetchDataAction(dispatch)\n        console.log('useEffect hook')\n    })\n\n    const props: IEpisodeProps = {\n        episodes: state.episodes,\n        toggleFavAction,\n        favourites: state.favourites,\n        store: { state, dispatch }\n    }\n\n    return (\n        <React.Suspense fallback={<div> Loadding ... </div>}>\n            <section className=\"episodeLayout\">\n                <EpisodesList {...props} />\n            </section>\n        </React.Suspense>\n    )\n}\n","import React from 'react'\nimport { Store } from './Store'\nimport { IEpisodeProps } from './interfaces';\nimport { toggleFavAction } from './Actions'\n\nconst EpisodesList = React.lazy<any>(() => import('./EpisodesList'))\n\nexport default function FavPage(): JSX.Element {\n    const { state, dispatch } = React.useContext(Store)\n    \n    const props: IEpisodeProps = {\n        episodes: state.favourites,\n        toggleFavAction,\n        favourites: state.favourites,\n        store: { state, dispatch }\n    }\n\n    return (\n        <React.Suspense fallback={<div> Loadding ... </div>}>\n            <div className=\"episodeLayout\">\n                <EpisodesList {...props} />\n            </div>\n        </React.Suspense>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StoreProvider } from './Store'\nimport { Router, RouteComponentProps } from '@reach/router'\nimport HomePage from \"./HomePage\"\nimport FavPage from \"./FavPage\"\n\nconst RouterPage = (props: { pageComponent: JSX.Element } & RouteComponentProps) => props.pageComponent\n\nReactDOM.render(<StoreProvider>\n    <Router>\n        <App path='/' >\n            <RouterPage pageComponent={<HomePage />} path=\"/\" />\n            <RouterPage pageComponent={<FavPage />} path=\"/faves\" />\n        </App>\n    </Router>\n</StoreProvider>, document.getElementById('root'));\n\n"],"sourceRoot":""}